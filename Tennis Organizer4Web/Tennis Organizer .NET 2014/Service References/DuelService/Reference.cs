//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tennis_Organizer.NET_2014.DuelService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DuelService.IDuelService")]
    public interface IDuelService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuelService/ArrangeDuel", ReplyAction="http://tempuri.org/IDuelService/ArrangeDuelResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TennisOrganizerServices.Trainer))]
        TennisOrganizerServices.Duel ArrangeDuel(TennisOrganizerServices.Player p1, TennisOrganizerServices.Player p2, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuelService/ArrangeDuel", ReplyAction="http://tempuri.org/IDuelService/ArrangeDuelResponse")]
        System.Threading.Tasks.Task<TennisOrganizerServices.Duel> ArrangeDuelAsync(TennisOrganizerServices.Player p1, TennisOrganizerServices.Player p2, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuelService/GetDuelByID", ReplyAction="http://tempuri.org/IDuelService/GetDuelByIDResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TennisOrganizerServices.Trainer))]
        TennisOrganizerServices.Duel GetDuelByID(int duelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuelService/GetDuelByID", ReplyAction="http://tempuri.org/IDuelService/GetDuelByIDResponse")]
        System.Threading.Tasks.Task<TennisOrganizerServices.Duel> GetDuelByIDAsync(int duelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuelService/Rate", ReplyAction="http://tempuri.org/IDuelService/RateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TennisOrganizerServices.Trainer))]
        void Rate(TennisOrganizerServices.Duel duel, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuelService/Rate", ReplyAction="http://tempuri.org/IDuelService/RateResponse")]
        System.Threading.Tasks.Task RateAsync(TennisOrganizerServices.Duel duel, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuelService/SetSeen", ReplyAction="http://tempuri.org/IDuelService/SetSeenResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TennisOrganizerServices.Trainer))]
        void SetSeen(TennisOrganizerServices.Duel duel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuelService/SetSeen", ReplyAction="http://tempuri.org/IDuelService/SetSeenResponse")]
        System.Threading.Tasks.Task SetSeenAsync(TennisOrganizerServices.Duel duel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuelService/Delete", ReplyAction="http://tempuri.org/IDuelService/DeleteResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TennisOrganizerServices.Trainer))]
        void Delete(TennisOrganizerServices.Duel duel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuelService/Delete", ReplyAction="http://tempuri.org/IDuelService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(TennisOrganizerServices.Duel duel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuelService/MakeDecision", ReplyAction="http://tempuri.org/IDuelService/MakeDecisionResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TennisOrganizerServices.Trainer))]
        void MakeDecision(TennisOrganizerServices.Duel duel, bool decision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuelService/MakeDecision", ReplyAction="http://tempuri.org/IDuelService/MakeDecisionResponse")]
        System.Threading.Tasks.Task MakeDecisionAsync(TennisOrganizerServices.Duel duel, bool decision);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDuelServiceChannel : Tennis_Organizer.NET_2014.DuelService.IDuelService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DuelServiceClient : System.ServiceModel.ClientBase<Tennis_Organizer.NET_2014.DuelService.IDuelService>, Tennis_Organizer.NET_2014.DuelService.IDuelService {
        
        public DuelServiceClient() {
        }
        
        public DuelServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DuelServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DuelServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DuelServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TennisOrganizerServices.Duel ArrangeDuel(TennisOrganizerServices.Player p1, TennisOrganizerServices.Player p2, System.DateTime date) {
            return base.Channel.ArrangeDuel(p1, p2, date);
        }
        
        public System.Threading.Tasks.Task<TennisOrganizerServices.Duel> ArrangeDuelAsync(TennisOrganizerServices.Player p1, TennisOrganizerServices.Player p2, System.DateTime date) {
            return base.Channel.ArrangeDuelAsync(p1, p2, date);
        }
        
        public TennisOrganizerServices.Duel GetDuelByID(int duelID) {
            return base.Channel.GetDuelByID(duelID);
        }
        
        public System.Threading.Tasks.Task<TennisOrganizerServices.Duel> GetDuelByIDAsync(int duelID) {
            return base.Channel.GetDuelByIDAsync(duelID);
        }
        
        public void Rate(TennisOrganizerServices.Duel duel, string result) {
            base.Channel.Rate(duel, result);
        }
        
        public System.Threading.Tasks.Task RateAsync(TennisOrganizerServices.Duel duel, string result) {
            return base.Channel.RateAsync(duel, result);
        }
        
        public void SetSeen(TennisOrganizerServices.Duel duel) {
            base.Channel.SetSeen(duel);
        }
        
        public System.Threading.Tasks.Task SetSeenAsync(TennisOrganizerServices.Duel duel) {
            return base.Channel.SetSeenAsync(duel);
        }
        
        public void Delete(TennisOrganizerServices.Duel duel) {
            base.Channel.Delete(duel);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(TennisOrganizerServices.Duel duel) {
            return base.Channel.DeleteAsync(duel);
        }
        
        public void MakeDecision(TennisOrganizerServices.Duel duel, bool decision) {
            base.Channel.MakeDecision(duel, decision);
        }
        
        public System.Threading.Tasks.Task MakeDecisionAsync(TennisOrganizerServices.Duel duel, bool decision) {
            return base.Channel.MakeDecisionAsync(duel, decision);
        }
    }
}
